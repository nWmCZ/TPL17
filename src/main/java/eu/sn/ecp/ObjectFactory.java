//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.10 at 11:33:27 AM CET 
//


package eu.sn.ecp;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ecp.wsdl package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _SendMessageRequestConversationID_QNAME = new QName("", "conversationID");
    private final static QName _ConnectivityTestErrorReceiverCode_QNAME = new QName("", "receiverCode");
    private final static QName _MessageStatusSenderApplication_QNAME = new QName("", "senderApplication");
    private final static QName _MessageStatusReceiveTimestamp_QNAME = new QName("", "receiveTimestamp");
    private final static QName _MessageStatusBaMessageID_QNAME = new QName("", "baMessageID");
    private final static QName _CheckMessageStatusErrorMessageID_QNAME = new QName("", "messageID");
    private final static QName _ReceiveMessageResponseReceivedMessage_QNAME = new QName("", "receivedMessage");
    private final static QName _ReceiveMessageErrorBusinessType_QNAME = new QName("", "businessType");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ecp.wsdl
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MessageTrace }
     * 
     */
    public MessageTrace createMessageTrace() {
        return new MessageTrace();
    }

    /**
     * Create an instance of {@link SendMessageRequest }
     * 
     */
    public SendMessageRequest createSendMessageRequest() {
        return new SendMessageRequest();
    }

    /**
     * Create an instance of {@link ConfirmReceiveMessageError }
     * 
     */
    public ConfirmReceiveMessageError createConfirmReceiveMessageError() {
        return new ConfirmReceiveMessageError();
    }

    /**
     * Create an instance of {@link ReceivedMessage }
     * 
     */
    public ReceivedMessage createReceivedMessage() {
        return new ReceivedMessage();
    }

    /**
     * Create an instance of {@link SendMessageResponse }
     * 
     */
    public SendMessageResponse createSendMessageResponse() {
        return new SendMessageResponse();
    }

    /**
     * Create an instance of {@link ReceiveMessageResponse }
     * 
     */
    public ReceiveMessageResponse createReceiveMessageResponse() {
        return new ReceiveMessageResponse();
    }

    /**
     * Create an instance of {@link ReceiveMessageRequest }
     * 
     */
    public ReceiveMessageRequest createReceiveMessageRequest() {
        return new ReceiveMessageRequest();
    }

    /**
     * Create an instance of {@link SentMessage }
     * 
     */
    public SentMessage createSentMessage() {
        return new SentMessage();
    }

    /**
     * Create an instance of {@link ReceiveMessageError }
     * 
     */
    public ReceiveMessageError createReceiveMessageError() {
        return new ReceiveMessageError();
    }

    /**
     * Create an instance of {@link MessageTraceItem }
     * 
     */
    public MessageTraceItem createMessageTraceItem() {
        return new MessageTraceItem();
    }

    /**
     * Create an instance of {@link ConnectivityTestResponse }
     * 
     */
    public ConnectivityTestResponse createConnectivityTestResponse() {
        return new ConnectivityTestResponse();
    }

    /**
     * Create an instance of {@link MessageStatus }
     * 
     */
    public MessageStatus createMessageStatus() {
        return new MessageStatus();
    }

    /**
     * Create an instance of {@link ConnectivityTestRequest }
     * 
     */
    public ConnectivityTestRequest createConnectivityTestRequest() {
        return new ConnectivityTestRequest();
    }

    /**
     * Create an instance of {@link ConnectivityTestError }
     * 
     */
    public ConnectivityTestError createConnectivityTestError() {
        return new ConnectivityTestError();
    }

    /**
     * Create an instance of {@link CheckMessageStatusError }
     * 
     */
    public CheckMessageStatusError createCheckMessageStatusError() {
        return new CheckMessageStatusError();
    }

    /**
     * Create an instance of {@link ConfirmReceiveMessageResponse }
     * 
     */
    public ConfirmReceiveMessageResponse createConfirmReceiveMessageResponse() {
        return new ConfirmReceiveMessageResponse();
    }

    /**
     * Create an instance of {@link CheckMessageStatusRequest }
     * 
     */
    public CheckMessageStatusRequest createCheckMessageStatusRequest() {
        return new CheckMessageStatusRequest();
    }

    /**
     * Create an instance of {@link ConfirmReceiveMessageRequest }
     * 
     */
    public ConfirmReceiveMessageRequest createConfirmReceiveMessageRequest() {
        return new ConfirmReceiveMessageRequest();
    }

    /**
     * Create an instance of {@link CheckMessageStatusResponse }
     * 
     */
    public CheckMessageStatusResponse createCheckMessageStatusResponse() {
        return new CheckMessageStatusResponse();
    }

    /**
     * Create an instance of {@link SendMessageError }
     * 
     */
    public SendMessageError createSendMessageError() {
        return new SendMessageError();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "conversationID", scope = SendMessageRequest.class)
    public JAXBElement<String> createSendMessageRequestConversationID(String value) {
        return new JAXBElement<String>(_SendMessageRequestConversationID_QNAME, String.class, SendMessageRequest.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "receiverCode", scope = ConnectivityTestError.class)
    public JAXBElement<String> createConnectivityTestErrorReceiverCode(String value) {
        return new JAXBElement<String>(_ConnectivityTestErrorReceiverCode_QNAME, String.class, ConnectivityTestError.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "senderApplication", scope = MessageStatus.class)
    public JAXBElement<String> createMessageStatusSenderApplication(String value) {
        return new JAXBElement<String>(_MessageStatusSenderApplication_QNAME, String.class, MessageStatus.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XMLGregorianCalendar }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "receiveTimestamp", scope = MessageStatus.class)
    public JAXBElement<XMLGregorianCalendar> createMessageStatusReceiveTimestamp(XMLGregorianCalendar value) {
        return new JAXBElement<XMLGregorianCalendar>(_MessageStatusReceiveTimestamp_QNAME, XMLGregorianCalendar.class, MessageStatus.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "baMessageID", scope = MessageStatus.class)
    public JAXBElement<String> createMessageStatusBaMessageID(String value) {
        return new JAXBElement<String>(_MessageStatusBaMessageID_QNAME, String.class, MessageStatus.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "messageID", scope = CheckMessageStatusError.class)
    public JAXBElement<String> createCheckMessageStatusErrorMessageID(String value) {
        return new JAXBElement<String>(_CheckMessageStatusErrorMessageID_QNAME, String.class, CheckMessageStatusError.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "messageID", scope = ConfirmReceiveMessageError.class)
    public JAXBElement<String> createConfirmReceiveMessageErrorMessageID(String value) {
        return new JAXBElement<String>(_CheckMessageStatusErrorMessageID_QNAME, String.class, ConfirmReceiveMessageError.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "senderApplication", scope = ReceivedMessage.class)
    public JAXBElement<String> createReceivedMessageSenderApplication(String value) {
        return new JAXBElement<String>(_MessageStatusSenderApplication_QNAME, String.class, ReceivedMessage.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "baMessageID", scope = ReceivedMessage.class)
    public JAXBElement<String> createReceivedMessageBaMessageID(String value) {
        return new JAXBElement<String>(_MessageStatusBaMessageID_QNAME, String.class, ReceivedMessage.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReceivedMessage }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "receivedMessage", scope = ReceiveMessageResponse.class)
    public JAXBElement<ReceivedMessage> createReceiveMessageResponseReceivedMessage(ReceivedMessage value) {
        return new JAXBElement<ReceivedMessage>(_ReceiveMessageResponseReceivedMessage_QNAME, ReceivedMessage.class, ReceiveMessageResponse.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "businessType", scope = ReceiveMessageError.class)
    public JAXBElement<String> createReceiveMessageErrorBusinessType(String value) {
        return new JAXBElement<String>(_ReceiveMessageErrorBusinessType_QNAME, String.class, ReceiveMessageError.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "senderApplication", scope = SentMessage.class)
    public JAXBElement<String> createSentMessageSenderApplication(String value) {
        return new JAXBElement<String>(_MessageStatusSenderApplication_QNAME, String.class, SentMessage.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "baMessageID", scope = SentMessage.class)
    public JAXBElement<String> createSentMessageBaMessageID(String value) {
        return new JAXBElement<String>(_MessageStatusBaMessageID_QNAME, String.class, SentMessage.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "receiverCode", scope = SendMessageError.class)
    public JAXBElement<String> createSendMessageErrorReceiverCode(String value) {
        return new JAXBElement<String>(_ConnectivityTestErrorReceiverCode_QNAME, String.class, SendMessageError.class, value);
    }

}
